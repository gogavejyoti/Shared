public string GenerateAiPrompt(
    List<WfmMetricException> exceptions,
    List<WfmAggregateException> aggregatedExceptions,
    string vertical,
    string planPeriod,
    string userSummary)
{
    var sb = new StringBuilder();

    sb.AppendLine($"Vertical: {vertical}");
    sb.AppendLine($"Plan Period: {planPeriod}");
    sb.AppendLine();
    sb.AppendLine("User Summary:");
    sb.AppendLine(userSummary);
    sb.AppendLine();

    // --- Aggregated Exceptions ---
    if (aggregatedExceptions.Any())
    {
        sb.AppendLine("Aggregated Exceptions:");

        var accAgg = aggregatedExceptions.Where(e => e.Level == "Account");
        var geoAgg = aggregatedExceptions.Where(e => e.Level == "Geo");

        foreach (var ex in accAgg)
        {
            sb.AppendLine($"- Account {ex.Entity}: {ex.Metric} average is {ex.Actual}% (Target: {ex.Target}%)");
        }

        foreach (var ex in geoAgg)
        {
            sb.AppendLine($"- Geo {ex.Entity} (Account: {ex.Parent}): {ex.Metric} average is {ex.Actual}% (Target: {ex.Target}%)");
        }

        sb.AppendLine();
    }

    // --- LOB-level Exceptions ---
    if (exceptions.Any(e => !string.IsNullOrEmpty(e.LOB)))
    {
        sb.AppendLine("LOB-level Exceptions:");

        var lobGroup = exceptions
            .Where(e => e.LOB != null)
            .GroupBy(e => new { e.Account, e.Geo, e.LOB });

        foreach (var g in lobGroup)
        {
            sb.AppendLine($"Account: {g.Key.Account}");
            sb.AppendLine($"  Geo: {g.Key.Geo}");
            sb.AppendLine($"    LOB: {g.Key.LOB}");
            foreach (var ex in g)
            {
                var monthInfo = string.IsNullOrEmpty(ex.Month) ? "" : $" [{ex.Month}]";
                sb.AppendLine($"      - {ex.Metric}{monthInfo}: {ex.Actual} (Target: {(ex.Target < 0 ? ex.Target * -1 : ex.Target)}, Severity: {ex.Severity})");
            }
        }

        sb.AppendLine();
    }

    return sb.ToString();
}
