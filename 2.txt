    function buildStaffingChart(data, containerId) {
        // ---- aggregate by weekFormat ----
        const weekMap = {};
        data.forEach(d => {
            if (!weekMap[d.weekFormat]) {
                weekMap[d.weekFormat] = { required: 0, available: 0 };
            }
            weekMap[d.weekFormat].required += d.requiredHC || 0;
            weekMap[d.weekFormat].available += d.availableHC || 0;
        });

        // sort weeks by date (assuming dd-MMM-yy format)
        const weeks = Object.keys(weekMap).sort((a, b) => new Date(a) - new Date(b));
        const fteReq = weeks.map(w => Math.round(weekMap[w].required));
        const fteAva = weeks.map(w => Math.round(weekMap[w].available));
        const staffingPct = weeks.map(w => {
            const req = weekMap[w].required;
            const ava = weekMap[w].available;
            return req > 0 ? Math.round((ava / req) * 100) : 0;
        });

        // ---- chart options ----
        const options = {
            chart: {
                height: 250,
                type: 'line',
                stacked: false,
                toolbar: {
                    show: false
                }
            },
   
            toolbar: {
                show: false // Hides the toolbar with the zoom icon
            },
            stroke: { width: [0, 0, 3] },
            colors: [app.color.theme, 'rgba(' + app.color.bodyColorRgb + ', .5)', app.color.warning],
            dataLabels: { enabled: false }, // removed labels
            series: [
                { name: 'FTE Required', type: 'column', data: fteReq },
                { name: 'FTE Available', type: 'column', data: fteAva },
                { name: 'Staffing %', type: 'line', data: staffingPct }
            ],
            xaxis: {
                categories: weeks,
                axisBorder: {
                    show: true,
                    color: app.color.borderColor,
                    height: 1,
                    width: '100%',
                    offsetX: 0,
                    offsetY: -1
                },
                axisTicks: {
                    show: true,
                    borderType: 'solid',
                    color: app.color.borderColor,
                    height: 6,
                    offsetX: 0,
                    offsetY: 0
                }

            },
            yaxis: [
                {
                    seriesName: 'FTE Required',
                    title: { text: "FTE Count", style: { color: app.color.warning } },
                    min: undefined,  // auto-scale
                    forceNiceScale: true,
                    labels: { style: { colors: [app.color.bodyColor] } },
                },
                {
                    seriesName: 'FTE Available',
                    show: false,
                    labels: { style: { colors: [app.color.bodyColor] } },
                },
                {
                    opposite: true,
                    seriesName: 'Staffing %',
                    title: { text: "Staffing %", style: { color: app.color.warning } },
                    axisTicks: { show: true, color: app.color.borderColor },
                    axisBorder: { show: true, color: app.color.borderColor },
                    labels: { formatter: val => val + "%", style: { colors: [app.color.bodyColor] } },
                    min: undefined,  // auto-scale
                    forceNiceScale: true
                }
            ],
            tooltip: {
                shared: true,
                intersect: false,
                y: {
                    formatter: function (val, opts) {
                        if (opts.seriesIndex === 2) return val + "%";
                        return val;
                    }
                }
            },
            legend: { position: "bottom", horizontalAlign: "center" }
        };

        // ---- destroy old chart & create new ----
        if (chart) {
            chart.destroy();
        }
        chart = new ApexCharts(document.querySelector("#" + containerId), options);
        chart.render();
    }
