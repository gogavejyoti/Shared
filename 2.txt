function buildStaffingTableShrinkageAttrition(jsonData, containerId) {
    // clear container
    $("#" + containerId).empty();

    // aggregate by month
    const monthMap = {};
    jsonData.forEach(d => {
        if (!monthMap[d.monthFormat]) {
            monthMap[d.monthFormat] = {
                totalHC: 0,
                plannedShrinkageWeighted: 0,
                actualShrinkageWeighted: 0,
                plannedAttritionWeighted: 0,
                actualAttritionWeighted: 0,
                totalForecastedHours: 0,
                totalActualHours: 0
            };
        }
        const m = monthMap[d.monthFormat];
        m.totalHC += d.availableHC || 0;
        m.plannedShrinkageWeighted += (d.availableHC || 0) * (d.plannedShrinkage || 0);
        m.actualShrinkageWeighted += (d.availableHC || 0) * (d.actualShrinkage || 0);
        m.plannedAttritionWeighted += (d.availableHC || 0) * (d.plannedAttrition || 0);
        m.actualAttritionWeighted += (d.availableHC || 0) * (d.actualAttrition || 0);

        m.totalForecastedHours += d.forecastedHours || 0;
        m.totalActualHours += d.actualHours || 0;
    });

    let html = `<div class="table-responsive" style="overflow-x:auto;">
      <table class="table table-hover align-middle text-center">
        <thead class="table-dark">
          <tr>
            <th>Month</th>
            <th colspan="2">Shrinkage %</th>
            <th colspan="2">Attrition %</th>
            <th>OTF %</th>
          </tr>
          <tr>
            <th></th>
            <th>Planned</th>
            <th>Actual</th>
            <th>Planned</th>
            <th>Actual</th>
            <th></th>
          </tr>
        </thead>
        <tbody>`;

    Object.keys(monthMap).forEach(month => {
        const m = monthMap[month];
        const plannedShrink = m.totalHC === 0 ? "N/A" : (m.plannedShrinkageWeighted / m.totalHC * 100).toFixed(2) + "%";
        const actualShrink = m.totalHC === 0 ? "N/A" : (m.actualShrinkageWeighted / m.totalHC * 100).toFixed(2) + "%";
        const plannedAttr = m.totalHC === 0 ? "N/A" : (m.plannedAttritionWeighted / m.totalHC * 100).toFixed(2) + "%";
        const actualAttr = m.totalHC === 0 ? "N/A" : (m.actualAttritionWeighted / m.totalHC * 100).toFixed(2) + "%";
        const otf = m.totalActualHours === 0 ? "N/A" : (m.totalForecastedHours / m.totalActualHours * 100).toFixed(2) + "%";

        html += `<tr>
          <td class="fw-semibold" nowrap>${month}</td>
          <td>${plannedShrink}</td>
          <td>${actualShrink}</td>
          <td>${plannedAttr}</td>
          <td>${actualAttr}</td>
          <td>${otf}</td>
        </tr>`;
    });

    html += `</tbody></table></div>`;
    $("#" + containerId).html(html);
}
