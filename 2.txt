let otfChart; // global reference to destroy previous chart if needed

function buildOTFWeekChart(data, containerId) {
    // Aggregate by weekFormat (dd-MMM-yy)
    const weekMap = {};
    data.forEach(d => {
        if (!weekMap[d.weekFormat]) {
            weekMap[d.weekFormat] = { actual: 0, forecasted: 0 };
        }
        weekMap[d.weekFormat].actual += d.actualHours || 0;
        weekMap[d.weekFormat].forecasted += d.forecastedHours || 0;
    });

    // Sort weeks by date
    const weeks = Object.keys(weekMap).sort((a, b) => new Date(a) - new Date(b));

    const actualHours = weeks.map(w => Math.round(weekMap[w].actual));
    const forecastedHours = weeks.map(w => Math.round(weekMap[w].forecasted));
    const otfPct = weeks.map(w => {
        const act = weekMap[w].actual;
        const fc = weekMap[w].forecasted;
        return act === 0 ? 0 : parseFloat(((fc / act) * 100).toFixed(2));
    });

    // ApexCharts options
    const options = {
        chart: {
            type: 'line',
            height: 300,
            stacked: false,
            toolbar: { show: false }
        },
        stroke: { width: [2, 2, 3], dashArray: [0, 0, 4] }, // dotted line for OTF%
        colors: ["#007bff", "#28a745", "#ffc107"], // forecast, actual, OTF%
        dataLabels: { enabled: false },
        series: [
            { name: 'Forecasted Hours', type: 'area', data: forecastedHours },
            { name: 'Actual Hours', type: 'area', data: actualHours },
            { name: 'OTF %', type: 'line', data: otfPct }
        ],
        xaxis: {
            categories: weeks,
            axisBorder: { show: true },
            axisTicks: { show: true }
        },
        yaxis: [
            {
                seriesName: 'Forecasted Hours',
                title: { text: 'Hours' },
                min: 0
            },
            {
                opposite: true,
                seriesName: 'OTF %',
                title: { text: 'OTF %' },
                labels: { formatter: val => val + "%" }
            }
        ],
        tooltip: {
            shared: true,
            intersect: false,
            y: {
                formatter: function(val, opts) {
                    if (opts.seriesIndex === 2) return val + "%";
                    return val;
                }
            }
        },
        legend: { position: 'bottom', horizontalAlign: 'center' },
        fill: {
            type: ['gradient', 'gradient', 'solid'],
            gradient: { shadeIntensity: 1, opacityFrom: 0.4, opacityTo: 0.2, stops: [0, 90, 100] }
        }
    };

    if (otfChart) otfChart.destroy();
    otfChart = new ApexCharts(document.querySelector("#" + containerId), options);
    otfChart.render();
}
