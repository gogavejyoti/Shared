getSelectedCellsData: function () {
    const cellList = [];

    // Helper: round pixel value to avoid float precision issues
    const px = s => Math.round(parseFloat(s) || 0);

    // Collect all selected cells, regardless of class order in DOM
    this.host.find(".cellStyleSelected, .rowStyleSelected").each(function () {
        const $cell = a(this);
        const top = px($cell.css("top"));
        const left = px($cell.css("left"));
        const value = $cell.find("#innerDiv").text().trim();

        cellList.push({ top, left, value });
    });

    // Group cells into rows by 'top' position
    const rowMap = {};
    cellList.forEach(cell => {
        if (!rowMap[cell.top]) rowMap[cell.top] = [];
        rowMap[cell.top].push(cell);
    });

    // Sort rows top-to-bottom, and cells left-to-right
    const sortedTops = Object.keys(rowMap).map(Number).sort((a, b) => a - b);
    const result = [];

    sortedTops.forEach(top => {
        const row = rowMap[top].sort((a, b) => a.left - b.left);
        result.push(row.map(c => c.value));
    });

    return result;
}
