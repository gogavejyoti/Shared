<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Sleek Reporting Dashboard</title>
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body { font-family: 'Roboto', sans-serif; background: #f5f7fb; margin: 0; padding: 0; }
    .sleek-dashboard-container { padding: 20px; }
    .dashboard-header {
      display: flex; justify-content: space-between; align-items: center;
      background: #fff; padding: 15px 25px; border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.05); margin-bottom: 20px;
    }
    .dashboard-header .logo { font-size: 22px; font-weight: 600; color: #333; }
    .filters select, .filters button {
      padding: 8px 12px; border: 1px solid #ddd; border-radius: 6px;
      margin-left: 10px; font-size: 14px; cursor: pointer;
    }
    .filters button {
      background: #6200ea; color: #fff; border: none; transition: 0.3s;
    }
    .filters button:hover { background: #4500b5; }
    .key-metrics-grid { display: grid; grid-template-columns: repeat(auto-fit,minmax(220px,1fr)); gap: 20px; margin-bottom: 20px; }
    .metric-card {
      color: #fff; padding: 20px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.05);
      display: flex; flex-direction: column; align-items: flex-start; justify-content: center;
    }
    .metric-card .metric-icon { font-size: 24px; margin-bottom: 10px; opacity: 0.9; }
    .metric-card .metric-value { font-size: 32px; font-weight: bold; margin-bottom: 5px; }
    .metric-card .metric-label { font-size: 14px; opacity: 0.9; }
    .charts-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(450px, 1fr)); gap: 20px; }
    .chart-card {
      background: #fff; padding: 20px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }
    .chart-card h3 { margin: 0 0 15px; font-size: 16px; font-weight: 600; }
    .compare-toggle {
      margin-top: 10px; background: #eee; border: none; padding: 6px 12px;
      border-radius: 6px; cursor: pointer; font-size: 13px;
    }
    .compare-toggle.active { background: #6200ea; color: #fff; }
  </style>
</head>
<body>

<div id="myDashboard"></div>

<script>
(function ($) {
  $.fn.dashboardPlugin = function (options) {
    var settings = $.extend({ data: [], maxWeeks: 12 }, options);
    var $container = this;
    var metricColors = {}, colorPalette = ["#4CAF50","#2196F3","#FF9800","#9C27B0","#E91E63","#00BCD4"];
    var metricIcons = {
      "Forecasted Hours": "fa-clock", "Actual Hours": "fa-business-time",
      "Required HC": "fa-user-check", "Available HC": "fa-users",
      "Planned Attrition": "fa-chart-line", "Actual Attrition": "fa-user-minus",
      "Planned Shrinkage": "fa-compress", "Actual Shrinkage": "fa-expand",
      "Planned AHT": "fa-hourglass-start", "Actual AHT": "fa-hourglass-end"
    };

    function init() {
      $container.empty().addClass("sleek-dashboard-container");
      renderHeader();
      renderMetrics();
      renderCharts();
    }

    function renderHeader() {
      var headerHtml = `
        <div class="dashboard-header">
          <div class="logo"><i class="fa-solid fa-chart-pie"></i> Reporting Dashboard</div>
          <div class="filters">
            <select data-filter-type="geo"><option value="">All Geos</option></select>
            <select data-filter-type="site"><option value="">All Sites</option></select>
            <select data-filter-type="lob"><option value="">All LOBs</option></select>
            <select data-filter-type="week"><option value="">All Weeks</option></select>
            <select data-filter-type="month"><option value="">All Months</option></select>
            <button class="refresh-btn"><i class="fa fa-sync-alt"></i> Refresh</button>
          </div>
        </div>`;
      $container.append(headerHtml);
    }

    function renderMetrics() {
      var metricsHtml = `<div class="key-metrics-grid"></div>`;
      $container.append(metricsHtml);
      updateMetrics(settings.data);
    }

    function updateMetrics(data) {
      var $grid = $container.find(".key-metrics-grid").empty();
      var aggregated = {};
      data.forEach(d => {
        if (!aggregated[d.Header]) aggregated[d.Header] = 0;
        aggregated[d.Header] += parseFloat(d.Value) || 0;
      });
      Object.keys(aggregated).forEach((metric, i) => {
        if (!metricColors[metric]) metricColors[metric] = colorPalette[i % colorPalette.length];
        var icon = metricIcons[metric] || "fa-circle";
        var card = `
          <div class="metric-card" style="background:${metricColors[metric]}">
            <div class="metric-icon"><i class="fa ${icon}"></i></div>
            <div class="metric-value">${aggregated[metric].toFixed(2)}</div>
            <div class="metric-label">${metric}</div>
          </div>`;
        $grid.append(card);
      });
    }

    function renderCharts() {
      var chartsHtml = `
        <div class="charts-grid">
          <div class="chart-card"><h3>Hours Trend</h3><canvas id="hoursChart"></canvas></div>
          <div class="chart-card"><h3>Headcount Trend</h3><canvas id="hcChart"></canvas></div>
          <div class="chart-card"><h3>Attrition Trend</h3><canvas id="attritionChart"></canvas></div>
          <div class="chart-card"><h3>Shrinkage Trend</h3><canvas id="shrinkageChart"></canvas></div>
          <div class="chart-card"><h3>AHT Trend</h3><canvas id="ahtChart"></canvas></div>
          <div class="chart-card"><h3>Comparison Mode</h3><button class="compare-toggle">Toggle Comparison</button><canvas id="compareChart"></canvas></div>
        </div>`;
      $container.append(chartsHtml);
      drawCharts(settings.data);
    }

    function drawCharts(data) {
      // Simple example: group by Week + Header
      var weeks = [...new Set(data.map(d => d.Week))].sort();
      var ctx = document.getElementById("hoursChart").getContext("2d");
      new Chart(ctx, {
        type: "line",
        data: {
          labels: weeks,
          datasets: [{
            label: "Forecasted Hours",
            data: weeks.map(w => sumValue(data, w, "Forecasted Hours")),
            borderColor: "#2196F3", backgroundColor: "rgba(33,150,243,0.2)", fill: true
          },{
            label: "Actual Hours",
            data: weeks.map(w => sumValue(data, w, "Actual Hours")),
            borderColor: "#4CAF50", backgroundColor: "rgba(76,175,80,0.2)", fill: true
          }]
        },
        options: { responsive: true, plugins: { legend: { position: "bottom" } } }
      });
      // Similarly, you can configure other charts (Headcount, Attrition, etc.)
    }

    function sumValue(data, week, header) {
      return data.filter(d => d.Week === week && d.Header === header)
                 .reduce((s,v) => s + (parseFloat(v.Value)||0), 0);
    }

    init();
    return this;
  };
})(jQuery);

// Init plugin (empty dataset here)
$("#myDashboard").dashboardPlugin({ data: [] });
</script>
</body>
</html>
