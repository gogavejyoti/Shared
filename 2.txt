public async Task<string> SummarizeAnswerWithChatGPT(List<ChatMessage> fullHistory)
{
    var chatRequest = new
    {
        messages = fullHistory.Select(m => new
        {
            role = m.Role,
            content = m.Content
        }),
        temperature = 0.2,
        max_tokens = 300
    };

    using var http = new HttpClient();
    http.DefaultRequestHeaders.Add("api-key", azureApiKey);

    var url = $"{azureEndpoint}openai/deployments/{chatDeployment}/chat/completions?api-version={chatApiVersion}";
    var content = new StringContent(JsonConvert.SerializeObject(chatRequest), Encoding.UTF8, "application/json");

    var response = await http.PostAsync(url, content);
    var responseJson = await response.Content.ReadAsStringAsync();

    if (!response.IsSuccessStatusCode)
        throw new Exception("ChatGPT error: " + responseJson);

    dynamic result = JsonConvert.DeserializeObject(responseJson);
    return result.choices[0].message.content.ToString();
}
