// Convert Uint8Array → Base64
function uint8ArrayToBase64(u8) {
    let binary = '';
    for (let i = 0; i < u8.length; i++) {
        binary += String.fromCharCode(u8[i]);
    }
    return btoa(binary);
}

// Compress all sheets
function compressSheets(sheets) {
    $.each(sheets, function (index, sheet) {
        if (!sheet.jsonData) return;

        try {
            // Convert JSON string → bytes
            const encoder = new TextEncoder();
            const jsonBytes = encoder.encode(sheet.jsonData);

            // Compress with fzstd
            const compressedBytes = fzstd.compress(jsonBytes);

            // Convert compressed bytes → Base64 for safe transport
            sheet.jsonDataBytes = uint8ArrayToBase64(compressedBytes);

            // Optionally clear jsonData to save memory
            // sheet.jsonData = null;
        } catch (e) {
            console.error(`Failed to compress sheet at index ${index}:`, e);
        }
    });
}
