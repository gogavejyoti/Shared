static string BuildAiPrompt(List<AIForecastEntry> forecastEntries)
{
    var grouped = forecastEntries
        .GroupBy(f => f.Program)
        .Select(g => new
        {
            Program = g.Key,
            Metrics = g.ToList()
        });

    var promptBuilder = new System.Text.StringBuilder();

    promptBuilder.AppendLine("You are a Workforce Forecasting Expert AI Assistant.");
    promptBuilder.AppendLine("Given below is a set of forecast data for multiple programs. Each program includes metrics like Shrinkage, Attrition, Staffing, etc.");
    promptBuilder.AppendLine();
    promptBuilder.AppendLine("🔍 **Your task**:");
    promptBuilder.AppendLine("1. Analyze each program’s forecast trends.");
    promptBuilder.AppendLine("2. Highlight any increase or decrease with appropriate emojis/icons and explain their impact.");
    promptBuilder.AppendLine("3. Present the output in a professional, visually engaging format using:");
    promptBuilder.AppendLine("   - ✅ Good trends (e.g., declining attrition)");
    promptBuilder.AppendLine("   - 🔴 Bad trends (e.g., rising shrinkage)");
    promptBuilder.AppendLine("   - 📉 Downward trends | 📈 Upward trends");
    promptBuilder.AppendLine("   - Bold headings, bullet points per metric, and consistent format.");
    promptBuilder.AppendLine();
    promptBuilder.AppendLine("Please use Markdown formatting for output clarity.");
    promptBuilder.AppendLine();
    promptBuilder.AppendLine("📦 **Forecast Data:**");

    foreach (var group in grouped)
    {
        promptBuilder.AppendLine($"\n### 📊 Program: **{group.Program}**");

        foreach (var metric in group.Metrics)
        {
            promptBuilder.AppendLine($"- **{metric.Metric}**:");
            foreach (var f in metric.Forecasts)
            {
                promptBuilder.AppendLine($"  - {f}");
            }
        }
    }

    promptBuilder.AppendLine("\nPlease analyze each program and provide:");
    promptBuilder.AppendLine("- A short summary of the trend (improving 📈, declining 📉, or stable ➖)");
    promptBuilder.AppendLine("- Highlight risks or anomalies (e.g., consistent rise in attrition 🔴)");
    promptBuilder.AppendLine("- Recommended actions or monitoring suggestions");

    return promptBuilder.ToString();
}
