function copyToClipboard(text) {
    // Try modern clipboard API first
    if (navigator.clipboard && document.hasFocus()) {
        navigator.clipboard.writeText(text)
            .then(() => console.log("Copied using Clipboard API"))
            .catch(err => {
                console.warn("Clipboard API failed, using fallback:", err);
                fallbackCopy(text);
            });
    } else {
        fallbackCopy(text);
    }
}

// Fallback using a hidden textarea
function fallbackCopy(text) {
    const textarea = document.createElement("textarea");
    textarea.style.position = "fixed";
    textarea.style.opacity = "0";
    textarea.value = text;
    document.body.appendChild(textarea);
    textarea.focus();
    textarea.select();

    try {
        const success = document.execCommand("copy");
        console.log(success ? "Copied with fallback" : "Fallback copy failed");
    } catch (err) {
        console.error("Fallback copy failed:", err);
    }

    document.body.removeChild(textarea);
}

const indexedRowIds = Object.keys(rowSelections)
    .map(rowId => parseInt(rowId, 10))       // Convert keys to numbers
    .sort((a, b) => a - b)                   // Sort numerically
    .reduce((acc, rowId, index) => {
        acc[index] = rowId.toString();       // Store original rowId string as value
        return acc;
    }, {});

document.addEventListener('keydown', function (e) {
    if ((e.ctrlKey || e.metaKey) && e.key === 'c') {
        e.preventDefault();
        const grid = $('#yourPivotGrid').jqxPivotGrid('getInstance');
        const data = grid.getSelectedCellsData?.();
        if (data?.length) {
            const text = data.map(row => row.join('\t')).join('\n');
            copyToClipboard(text); // uses robust fallback
        }
    }
});
