<script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>


$(document).ready(function () {
    let editor;
    let localNotesOldCache = null;
    let localNotesCache = null;
    let autoSaveTimer = null;
    const autoSaveDelay = 10000; // 10 seconds

    // Initialize CKEditor when panel opens
    function initEditor() {
        if (!editor) {
            editor = CKEDITOR.replace('txtNotes', {
                height: 400,
                removePlugins: 'elementspath',
                resize_enabled: false,
                toolbar: [
                    { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', '-', 'RemoveFormat'] },
                    { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent'] },
                    { name: 'styles', items: ['Format', 'FontSize'] },
                    { name: 'colors', items: ['TextColor', 'BGColor'] },
                    { name: 'tools', items: ['Maximize'] }
                ]
            });

            // Detect changes
            editor.on('change', function () {
                localNotesCache = editor.getData();
                if (localNotesOldCache != localNotesCache) {
                    scheduleAutoSave();
                    localNotesOldCache = localNotesCache;
                }
            });
        }
    }

    // Toggle button
    $('#notesToggleButton').click(function () {
        $('#notesPanel').toggleClass('active');
        if ($('#notesPanel').hasClass('active')) {
            initEditor();
            if (localNotesCache !== null) {
                editor.setData(localNotesCache);
            } else {
                loadNotesFromDB();
            }
        }
    });

    // Close
    $('#btnCloseNotes').click(function () {
        $('#notesPanel').removeClass('active');
    });

    // Save
    $('#btnSaveNotes').click(function () {
        const notesHtml = editor.getData();
        localNotesCache = notesHtml;

        $.ajax({
            url: '/ResourcePlanner/SaveUserNotes',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                notesText: notesHtml,
                rpPlanId: $('#planId').val()
            }),
            success: function () {
                showToast('✅ Notes saved successfully!');
            },
            error: function () {
                showToast('❌ Failed to save notes.');
            }
        });
    });

    // Refresh
    $('#btnRefreshNotes').click(function () {
        if (confirm('Discard unsaved changes and reload from the database?')) {
            loadNotesFromDB();
        }
    });

    // Auto-save
    function scheduleAutoSave() {
        if (autoSaveTimer) clearTimeout(autoSaveTimer);
        autoSaveTimer = setTimeout(() => {
            $('#btnSaveNotes').click();
        }, autoSaveDelay);
    }

    // Load from DB
    function loadNotesFromDB() {
        $.ajax({
            url: '/ResourcePlanner/GetUserNotes',
            type: 'GET',
            data: { rpPlanId: $('#planId').val() },
            success: function (data) {
                const html = data?.notesText || '';
                localNotesCache = html;
                localNotesOldCache = html;
                if (editor) editor.setData(html);
            },
            error: function () {
                localNotesCache = '';
                localNotesOldCache = '';
                if (editor) editor.setData('');
                console.error('Failed to load notes.');
            }
        });
    }

    // Toast
    function showToast(message) {
        const toast = $('<div>')
            .addClass('toast-msg')
            .text(message);
        $('body').append(toast);
        setTimeout(() => toast.css('opacity', 1), 50);
        setTimeout(() => toast.fadeOut(400, () => toast.remove()), 2500);
    }
});
