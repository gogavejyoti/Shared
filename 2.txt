let otfChart; // global reference

function buildOTFWeekChart(data, containerId) {
    if (!data || data.length === 0) return;

    // Aggregate by weekFormat (dd-MMM-yy)
    const weekMap = {};
    data.forEach(d => {
        const week = d.weekFormat;
        if (!week) return; // skip invalid week

        if (!weekMap[week]) weekMap[week] = { actual: 0, forecasted: 0 };

        weekMap[week].actual += (d.actualHours || 0);
        weekMap[week].forecasted += (d.forecastedHours || 0);
    });

    const weeks = Object.keys(weekMap).sort((a, b) => new Date(a) - new Date(b));
    if (weeks.length === 0) return;

    // Prepare series arrays safely
    const actualHours = [];
    const forecastedHours = [];
    const otfPct = [];

    weeks.forEach(w => {
        const act = weekMap[w]?.actual ?? 0;
        const fc = weekMap[w]?.forecasted ?? 0;

        actualHours.push(act);
        forecastedHours.push(fc);

        otfPct.push(act > 0 ? parseFloat(((fc / act) * 100).toFixed(2)) : 0);
    });

    // ApexCharts options
    const options = {
        chart: { type: 'line', height: 300, stacked: false, toolbar: { show: false } },
        stroke: { width: [2, 2, 3], dashArray: [0, 0, 4] },
        colors: ["#007bff", "#28a745", "#ffc107"], // Forecasted, Actual, OTF %
        dataLabels: { enabled: false },
        series: [
            { name: 'Forecasted Hours', type: 'area', data: forecastedHours },
            { name: 'Actual Hours', type: 'area', data: actualHours },
            { name: 'OTF %', type: 'line', data: otfPct }
        ],
        xaxis: { categories: weeks },
        yaxis: [
            {
                title: { text: 'Hours' },
                min: 0
            },
            { 
                opposite: true,
                title: { text: 'OTF %' },
                labels: { formatter: val => val + "%" },
                min: 0,
                max: 150
            }
        ],
        tooltip: {
            shared: true,
            intersect: false,
            y: {
                formatter: function(val, opts) {
                    return opts.seriesIndex === 2 ? val + "%" : val;
                }
            }
        },
        legend: { position: 'bottom', horizontalAlign: 'center' },
        fill: { 
            type: ['gradient', 'gradient', 'solid'],
            gradient: { shadeIntensity: 1, opacityFrom: 0.4, opacityTo: 0.2 } 
        }
    };

    // Destroy previous chart if exists
    if (otfChart) otfChart.destroy();
    otfChart = new ApexCharts(document.querySelector("#" + containerId), options);
    otfChart.render();
}
