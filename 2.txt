getSelectedCellsData: function () {
    const rows = {};

    // Define a rounding helper (to nearest pixel row/column line)
    function roundPx(px) {
        return Math.round(parseFloat(px || 0));
    }

    // Find all selected cells by either class
    this.host.find(".cellStyleSelected, .rowStyleSelected").each(function () {
        const $cell = a(this);
        const top = roundPx($cell.css("top"));     // Y => row group
        const left = roundPx($cell.css("left"));   // X => sort within row
        const value = $cell.find("#innerDiv").text().trim();

        if (!rows[top]) rows[top] = [];
        rows[top].push({ left, value });
    });

    // Sort row keys top to bottom
    const sortedTops = Object.keys(rows).map(Number).sort((a, b) => a - b);
    const result = [];

    sortedTops.forEach(top => {
        const row = rows[top];
        row.sort((a, b) => a.left - b.left); // left to right
        result.push(row.map(cell => cell.value));
    });

    return result;
}
