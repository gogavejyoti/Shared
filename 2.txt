async function tryLockDocument() {
    // If connection is not ready, retry in 1 second
    if (!connection || connection.state !== signalR.HubConnectionState.Connected) {
        console.warn("⏳ Connection not ready, retrying...");
        setTimeout(tryLockDocument, 1000);
        return;
    }

    try {
        const canEdit = await connection.invoke("TryLockDocument", documentId, userId);
        hasEditLock = canEdit;
        updateUI();

        // Keep lock alive every 30s
        if (!keepAliveInterval) {
            keepAliveInterval = setInterval(() => {
                tryLockDocument();
            }, 30000);
        }
    } catch (err) {
        console.error("❌ Lock request failed:", err);
    }
}
