uniqueLOBs.forEach((lob, lobIndex) => {
    const lobColor = lobColors[lobIndex % lobColors.length]; // pick color per LOB
    metrics.forEach((metric, i) => {
        html += '<tr>';

        // Sticky LOB column (first metric row only)
        if (i === 0) {
            html += `<td class="sticky-left" rowspan="${metrics.length}" style="background:${lobColor}; color:#fff;">${lob}</td>`;
        }

        // Sticky Metric column (keep default styling)
        html += `<td class="sticky-left-2">${metric}</td>`;

        // Metric values
        uniqueWeeks.forEach(week => {
            let val = groupedData[lob][week][metric] || 0;
            val = Math.round(val);

            let cls = '';
            if (metric === 'Delta' && val < 0) cls = 'rag-red';
            if (metric === 'Staffing %') {
                if (val < 80) cls = 'rag-red';
                else if (val < 100) cls = 'rag-amber';
                else cls = 'rag-green';
                val = `${val}%`;
            } else {
                val = new Intl.NumberFormat().format(val);
            }

            html += `<td class="${cls}">${val}</td>`;
        });

        html += '</tr>';
    });
});
