(function ($) {
    $.fn.weekAnalyticsPopup = function (options) {
        const settings = $.extend({
            data: [],
            weekStartDay: 'sunday'
        }, options);

        $('#analyticsModal').remove();

        if ($('#weekAnalyticsPopupStyles').length === 0) {
            $('head').append(`
            <style id="weekAnalyticsPopupStyles">
                .table-wrapper {
                    overflow-x: auto;
                    overflow-y: auto;
                    max-height: 500px;
                    position: relative;
                    border: 1px solid #ccc;
                    background: #fff;
                }

                table {
                    border-collapse: collapse;
                    width: max-content;
                    table-layout: fixed;
                }

                th, td {
                    border: 1px solid #ccc;
                    padding: 8px;
                    text-align: center;
                    white-space: nowrap;
                    background: #fff;
                    min-width: 100px;
                }

                thead th {
                    position: sticky;
                    top: 0;
                    background: #f1f1f1;
                    z-index: 6;
                }

                thead th.sticky-left {
                    position: sticky;
                    top: 0;
                    left: 0;
                    background: #f1f1f1;
                    z-index: 7;
                    min-width: 120px;
                    max-width: 120px;
                }

                thead th.sticky-left-2 {
                    position: sticky;
                    top: 0;
                    left: 120px;
                    background: #f1f1f1;
                    z-index: 7;
                    min-width: 150px;
                    max-width: 150px;
                }

                tbody td.sticky-left {
                    position: sticky;
                    top: 0;
                    left: 0;
                    background: #f1f1f1;
                    z-index: 5;
                    min-width: 120px;
                    max-width: 120px;
                    white-space: nowrap;
                }

                tbody td.sticky-left-2 {
                    position: sticky;
                    top: 0;
                    left: 120px;
                    background: #f1f1f1;
                    z-index: 5;
                    min-width: 150px;
                    max-width: 150px;
                    white-space: nowrap;
                }

                .rag-red { color: red; font-weight: bold; }
                .rag-amber { color: orange; font-weight: bold; }
                .rag-green { color: green; font-weight: bold; }
            </style>`);
        }

        const modalHTML = `
        <div class="modal fade" id="analyticsModal" tabindex="-1" style="z-index:9999;">
          <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">Staffing Summary</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
              </div>
              <div class="modal-body p-0">
                <div class="table-wrapper" id="staffingContainer"></div>
              </div>
            </div>
          </div>
        </div>`;

        $('body').append(modalHTML);

        const $container = $('#staffingContainer');

        const parseWeek = w => {
            const [dd, mmm, yy] = w.split('-');
            return new Date(`${mmm} ${dd}, 20${yy}`);
        };

        const uniqueWeeks = [...new Set(settings.data.map(d => d.week))]
            .sort((a, b) => parseWeek(a) - parseWeek(b));
        const uniqueLOBs = [...new Set(settings.data.map(d => d.sheetName))]
            .sort();
        const metrics = ['Required HC', 'Available HC', 'Delta', 'Staffing %'];

        const groupedData = {};
        settings.data.forEach(d => {
            if (!groupedData[d.sheetName]) groupedData[d.sheetName] = {};
            if (!groupedData[d.sheetName][d.week]) groupedData[d.sheetName][d.week] = {};
            groupedData[d.sheetName][d.week][d.header] = Number(d.value);
        });

        uniqueLOBs.forEach(lob => {
            uniqueWeeks.forEach(week => {
                const req = groupedData[lob][week]?.['Required HC'] || 0;
                const avail = groupedData[lob][week]?.['Available HC'] || 0;
                groupedData[lob][week]['Delta'] = avail - req;
                groupedData[lob][week]['Staffing %'] = req === 0 ? 0 : Math.round((avail / req) * 100);
            });
        });

        let html = '<table><thead><tr>';
        html += `<th class="sticky-left" style="min-width:120px; max-width:120px;">LOB</th>`;
        html += `<th class="sticky-left-2" style="min-width:150px; max-width:150px;">Metric</th>`;
        uniqueWeeks.forEach(week => {
            html += `<th>${week}</th>`;
        });
        html += '</tr></thead><tbody>';

        uniqueLOBs.forEach(lob => {
            metrics.forEach((metric, i) => {
                html += '<tr>';

                if (i === 0) {
                    html += `<td class="sticky-left" style="min-width:120px; max-width:120px;" rowspan="${metrics.length}">${lob}</td>`;
                }

                html += `<td class="sticky-left-2" style="min-width:150px; max-width:150px;">${metric}</td>`;

                uniqueWeeks.forEach(week => {
                    let val = groupedData[lob][week][metric] || 0;
                    val = Math.round(val);

                    let cls = '';
                    if (metric === 'Delta' && val < 0) cls = 'rag-red';
                    if (metric === 'Staffing %') {
                        if (val < 80) cls = 'rag-red';
                        else if (val < 100) cls = 'rag-amber';
                        else cls = 'rag-green';
                        val = `${val}%`;
                    } else {
                        val = Number(val).toLocaleString();
                    }

                    html += `<td class="${cls}">${val}</td>`;
                });

                html += '</tr>';
            });
        });

        html += '</tbody></table>';
        $container.html(html);

        const modalEl = document.getElementById('analyticsModal');
        const modal = new bootstrap.Modal(modalEl);
        modal.show();

        return this;
    };
})(jQuery);
