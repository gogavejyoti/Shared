<!-- include ApexCharts -->
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

<div class="container my-3">
  <button id="refreshBtn" class="btn btn-primary btn-sm mb-3">ðŸ”„ Refresh Chart</button>
  <div id="apexMixedChart"></div>
</div>

<script>
let chart = null; // chart reference

function buildStaffingChart(data, containerId) {
    // ---- aggregate by weekFormat ----
    const weekMap = {};
    data.forEach(d => {
        if(!weekMap[d.weekFormat]) {
            weekMap[d.weekFormat] = { required:0, available:0 };
        }
        weekMap[d.weekFormat].required += d.requiredHC || 0;
        weekMap[d.weekFormat].available += d.availableHC || 0;
    });

    // sort weeks by date (assuming dd-MMM-yy format)
    const weeks = Object.keys(weekMap).sort((a,b) => new Date(a) - new Date(b));
    const fteReq = weeks.map(w => Math.round(weekMap[w].required));
    const fteAva = weeks.map(w => Math.round(weekMap[w].available));
    const staffingPct = weeks.map(w => {
        const req = weekMap[w].required;
        const ava = weekMap[w].available;
        return req > 0 ? Math.round((ava/req)*100) : 0;
    });

    // ---- chart options ----
    const options = {
        chart: {
            height: 300,
            type: 'line',
            stacked: false
        },
        stroke: { width: [0, 0, 3] },
        dataLabels: { enabled: false }, // removed labels
        series: [
            { name: 'FTE Required', type: 'column', data: fteReq },
            { name: 'FTE Available', type: 'column', data: fteAva },
            { name: 'Staffing %', type: 'line', data: staffingPct }
        ],
        xaxis: {
            categories: weeks,
            title: { text: "Week" }
        },
        yaxis: [
            {
                seriesName: 'FTE Required',
                title: { text: "FTE Count" },
                min: undefined,  // auto-scale
                forceNiceScale: true
            },
            {
                seriesName: 'FTE Available',
                show: false
            },
            {
                opposite: true,
                seriesName: 'Staffing %',
                title: { text: "Staffing %" },
                labels: { formatter: val => val + "%" },
                min: undefined,  // auto-scale
                forceNiceScale: true
            }
        ],
        tooltip: {
            shared: true,
            intersect: false,
            y: {
                formatter: function (val, opts) {
                    if (opts.seriesIndex === 2) return val + "%";
                    return val;
                }
            }
        },
        legend: { position: "top", horizontalAlign: "center" },
        colors: ["#007bff", "#28a745", "#ffc107"]
    };

    // ---- destroy old chart & create new ----
    if(chart) {
        chart.destroy();
    }
    chart = new ApexCharts(document.querySelector("#" + containerId), options);
    chart.render();
}

// ---- sample data ----
let weeklyData = [
  { weekFormat:"01-Jan-25", requiredHC:100, availableHC:90 },
  { weekFormat:"01-Jan-25", requiredHC:50, availableHC:60 },
  { weekFormat:"08-Jan-25", requiredHC:120, availableHC:130 },
  { weekFormat:"08-Jan-25", requiredHC:70, availableHC:60 }
];

// initial bind
buildStaffingChart(weeklyData, "apexMixedChart");

// refresh button
document.getElementById("refreshBtn").addEventListener("click", function() {
    // simulate new dataset
    weeklyData = [
      { weekFormat:"15-Jan-25", requiredHC:140, availableHC:130 },
      { weekFormat:"15-Jan-25", requiredHC:80, availableHC:100 },
      { weekFormat:"22-Jan-25", requiredHC:150, availableHC:170 }
    ];
    buildStaffingChart(weeklyData, "apexMixedChart");
});
</script>
