(function ($) {
    $.fn.dynamicApexCharts = function (options) {
        let settings = $.extend({
            data: [], // JSON input data
            container: this, // Chart container
        }, options);

        if (!Array.isArray(settings.data) || settings.data.length === 0) {
            console.error("Invalid or empty data provided.");
            return;
        }

        // Extract fields dynamically
        let keys = Object.keys(settings.data[0]);
        let xAxisField = null;
        let numericFields = [];
        let categoryFields = [];
        let groupingField = null;

        // Detect data types
        keys.forEach(key => {
            let sampleValue = settings.data[0][key];
            if (!isNaN(Date.parse(sampleValue))) {
                xAxisField = key; // Time-based field
            } else if (!isNaN(sampleValue)) {
                numericFields.push(key); // Numeric field
            } else {
                categoryFields.push(key); // Categorical field
            }
        });

        if (!xAxisField && categoryFields.length > 0) {
            xAxisField = categoryFields[0]; // Use first categorical field if no date detected
        }

        if (numericFields.length === 0) {
            console.error("No numeric fields detected for chart.");
            return;
        }

        // Determine if data should be grouped by an additional field
        if (categoryFields.length > 1) {
            groupingField = categoryFields.find(f => f !== xAxisField) || categoryFields[0];
        }

        // Determine best chart type dynamically
        let chartType = "bar"; // Default
        if (xAxisField && !isNaN(Date.parse(settings.data[0][xAxisField]))) {
            chartType = numericFields.length > 1 ? "line" : "area";
        } else if (numericFields.length > 1) {
            chartType = "line";
        } else if (categoryFields.length > 0) {
            chartType = "bar";
        }

        let categories = [...new Set(settings.data.map(d => d[xAxisField]))];
        let series = [];

        if (groupingField) {
            let groupedData = {};
            settings.data.forEach(d => {
                let group = d[groupingField];
                if (!groupedData[group]) groupedData[group] = {};
                numericFields.forEach(field => {
                    if (!groupedData[group][field]) groupedData[group][field] = [];
                    groupedData[group][field].push(d[field]);
                });
            });

            Object.keys(groupedData).forEach(group => {
                numericFields.forEach(field => {
                    series.push({
                        name: `${group} - ${field}`,
                        data: categories.map(cat => {
                            let entry = settings.data.find(d => d[xAxisField] === cat && d[groupingField] === group);
                            return entry ? entry[field] : null;
                        })
                    });
                });
            });
        } else {
            series = numericFields.map(field => ({
                name: field,
                data: settings.data.map(d => d[field])
            }));
        }

        let chartOptions = {
            chart: { type: chartType, height: 350 },
            title: { text: "Dynamic Chart" },
            xaxis: { categories: categories, title: { text: xAxisField } },
            yaxis: { title: { text: "Values" } },
            series: series
        };

        let chart = new ApexCharts(settings.container[0], chartOptions);
        chart.render();
    };
}(jQuery));
