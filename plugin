(function ($) {
    $.fn.generateDynamicChart = function (options) {
        let settings = $.extend({
            botTextContainer: null,
            userInput: '',
            data: []
        }, options);

        if (!settings.data || settings.data.length === 0) {
            console.error("No data provided for the chart.");
            return this;
        }

        let sampleItem = settings.data[0];
        let headers = Object.keys(sampleItem);

        // Identify the date-like column
        let dateColumn = headers.find(col => 
            settings.data.every(row => isDateLike(row[col]))
        );

        if (!dateColumn) {
            console.error("No valid date-like column found.");
            return this;
        }

        let nameColumns = headers.filter(col => col !== dateColumn);

        // Transpose Data: Convert Names into Rows
        let transposedData = nameColumns.map(name => {
            let row = { "Name": name };
            settings.data.forEach(entry => {
                row[entry[dateColumn]] = formatValue(entry[name], name);
            });
            return row;
        });

        // Generate Table
        let chatBox = $("#chatBox");
        let mainContainer = $("<div>").addClass("chat-result card p-3 mb-3 shadow-sm").css({
            width: "100%",
            border: "1px solid #ddd",
            borderRadius: "10px",
            padding: "15px"
        });

        let tableContainer = $("<div>").addClass("table-responsive").css({
            width: "100%",
            maxHeight: "250px",
            overflowY: "auto",
            marginBottom: "15px",
            padding: "10px",
            border: "1px solid #ccc",
            borderRadius: "5px",
            backgroundColor: "#f8f9fa"
        });

        let table = $("<table>").addClass("table table-bordered table-striped text-center").css({
            width: "100%",
            fontSize: "14px"
        });

        let thead = $("<thead>").append("<tr></tr>");
        let tbody = $("<tbody></tbody>");

        // Table Header
        let transposedHeaders = ["Name", ...settings.data.map(item => item[dateColumn])];
        transposedHeaders.forEach(key => {
            thead.find("tr").append($("<th>").text(key).addClass("bg-primary text-white"));
        });

        // Table Body
        transposedData.forEach(row => {
            let tr = $("<tr></tr>");
            transposedHeaders.forEach(key => {
                tr.append($("<td>").text(row[key] || ""));
            });
            tbody.append(tr);
        });

        table.append(thead).append(tbody);
        tableContainer.append(table);
        mainContainer.append(tableContainer);

        // Generate Chart
        let categories = transposedHeaders.slice(1); // Skip "Name"
        let seriesData = transposedData.map(row => ({
            name: row["Name"],
            data: categories.map(month => parseFloat(row[month]) || 0)
        }));

        let chartContainer = $("<div>").css({
            width: "100%",
            height: "350px",
            border: "1px solid #ccc",
            borderRadius: "5px",
            backgroundColor: "#fff",
            padding: "10px"
        });

        $('.bot-message:last').remove();
        mainContainer.append(chartContainer);
        chatBox.append(mainContainer);

        let chartOptions = {
            chart: { type: "bar", height: 320 },
            series: seriesData,
            xaxis: {
                categories: categories,
                labels: { rotate: -45, style: { fontSize: "12px" } }
            },
            tooltip: {
                y: {
                    formatter: function (value, { seriesIndex, dataPointIndex, w }) {
                        let name = w.config.series[seriesIndex].name;
                        return formatValue(value, name);
                    }
                }
            },
            dataLabels: {
                enabled: true,
                formatter: function (value, { seriesIndex, dataPointIndex, w }) {
                    let name = w.config.series[seriesIndex].name;
                    return formatValue(value, name);
                },
                style: { fontSize: "12px" }
            }
        };

        let chart = new ApexCharts(chartContainer[0], chartOptions);
        chart.render();

        return this;
    };

    // Function to check if a value looks like a date (dd-mmm-yy, mmm-yy, etc.)
    function isDateLike(value) {
        if (typeof value !== 'string') return false;
        return /^(0?[1-9]|[12]\d|3[01])?[- ]?(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[- ]?\d{2,4}$/.test(value);
    }

    // Format values: Fixed(1) if name contains "%" or "percentage", otherwise Fixed(0)
    function formatValue(value, name) {
        if (typeof value === "number") {
            if (name.toLowerCase().includes("percentage") || name.includes("%")) {
                return value.toFixed(1);
            }
            return value.toFixed(0);
        }
        return value;
    }

}(jQuery));
