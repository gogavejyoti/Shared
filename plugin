(function ($) {
    $.fn.generateDynamicChart = function (options) {
        let settings = $.extend({
            botTextContainer: null,
            userInput : '',
            // Where result text will be shown
            data: []
        }, options);

        if (!settings.data || settings.data.length === 0) {
            console.error("No data provided for the chart.");
            return this;
        }

        // Identify numeric and non-numeric fields
        let sampleItem = settings.data[0];
        let nonNumericFields = [];
        let numericFields = [];
        let percentageFields = [];

        Object.keys(sampleItem).forEach(key => {
            if (isNaN(sampleItem[key]) || sampleItem[key] === '') {
                nonNumericFields.push(key);
            } else {
                numericFields.push(key);
                if (key.toLowerCase().includes("percentage") || key.includes("%")) {
                    percentageFields.push(key);
                }
            }
        });

        // Determine category field (last non-numeric field)
        let categoryField = nonNumericFields.length > 0 ? nonNumericFields[nonNumericFields.length - 1] : Object.keys(sampleItem)[0];

        // Prepare data for ApexCharts
        let categories = settings.data.map(item => item[categoryField]);
        let seriesData = numericFields.map(key => ({
            name: key,
            data: settings.data.map(item => parseFloat(item[key]))
        }));

        // Determine best chart type
        let chartType = numericFields.length > 1 ? "bar" : "line";
        if (numericFields.length === 1 && settings.data.length <= 5) {
            chartType = "pie";
        }

        // Create main container
        let chatBox = $("#chatBox");

        let mainContainer = $("<div>").addClass("chat-result card p-3 mb-3 shadow-sm").css({
            width: "100%",
            border: "1px solid #ddd",
            borderRadius: "10px",
            padding: "15px"
        });

        // Table container
        let tableContainer = $("<div>").addClass("table-responsive").css({
            width: "100%",
            maxHeight: "250px",
            overflowY: "auto",
            marginBottom: "15px",
            padding: "10px",
            border: "1px solid #ccc",
            borderRadius: "5px",
            backgroundColor: "#f8f9fa"
        });

        let table = $("<table>").addClass("table table-bordered table-striped text-center").css({
            width: "100%",
            fontSize: "14px"
        });

        let thead = $("<thead>").append("<tr></tr>");
        let tbody = $("<tbody></tbody>");

        // Table Header
        Object.keys(sampleItem).forEach(key => {
            thead.find("tr").append($("<th>").text(key).addClass("bg-primary text-white"));
        });

        // Table Body
        settings.data.forEach(row => {
            let tr = $("<tr></tr>");
            Object.keys(row).forEach(key => {
                let value = row[key];
                if (percentageFields.includes(key)) {
                    value = (parseFloat(value) || 0).toFixed(1) + "%"; // Round to 1 decimal
                } else if (!isNaN(value)) {
                    value = Math.round(value); // Round to 0 decimal
                }
                tr.append($("<td>").text(value));
            });
            tbody.append(tr);
        });

        table.append(thead).append(tbody);
        tableContainer.append(table);
        mainContainer.append(tableContainer);

        if (settings.userInput.toLowerCase().includes("show chart") || settings.userInput.toLowerCase().includes("with chart") || settings.userInput.toLowerCase().includes("display chart")) {
            // Chart container
            let chartContainer = $("<div>").css({
                width: "100%",
                height: "350px",
                border: "1px solid #ccc",
                borderRadius: "5px",
                backgroundColor: "#fff",
                padding: "10px"
            });
            $('.bot-message:last').remove();
            mainContainer.append(chartContainer);
            chatBox.append(mainContainer);

            if (chartType === 'pie') {

                var chartOptions = {
                    series: seriesData[0].data,
                    chart: {
                        height: 320,
                        type: 'radialBar',
                    },
                    plotOptions: {
                        radialBar: {
                            offsetY: 0,
                            startAngle: 0,
                            endAngle: 270,
                            hollow: {
                                margin: 5,
                                size: '30%',
                                background: 'transparent',
                                image: undefined,
                            },
                            dataLabels: {
                                name: {
                                    show: false,
                                },
                                value: {
                                    show: false,
                                }
                            },
                            barLabels: {
                                enabled: true,
                                useSeriesColors: true,
                                offsetX: -8,
                                fontSize: '16px',
                                formatter: function (seriesName, opts) {
                                    return seriesName + ":  " + opts.w.globals.series[opts.seriesIndex].toFixed(1)+'%'
                                },
                            },
                        }
                    },
                    labels: categories,
                    responsive: [{
                        breakpoint: 480,
                        options: {
                            legend: {
                                show: false
                            }
                        }
                    }]
                };


                let chart = new ApexCharts(chartContainer[0], chartOptions);
                chart.render();
            }
            else {
                let chartOptions = {
                    chart: { type: chartType, height: 320 },

                    series: seriesData,
                    xaxis: {
                        categories: categories,
                        labels: { rotate: -45, style: { fontSize: "12px" } }
                    },
                    yaxis: {
                        labels: {
                            formatter: function (value) {
                                return percentageFields.includes(chartType) ? value.toFixed(1) + "%" : Math.round(value);
                            }
                        }
                    },
                    tooltip: {
                        y: {
                            formatter: function (value, { seriesIndex, dataPointIndex, w }) {
                                let fieldName = w.config.series[seriesIndex].name;
                                return percentageFields.includes(fieldName) ? `${value.toFixed(1)}%` : Math.round(value);
                            }
                        }
                    },
                    dataLabels: {
                        enabled: true,
                        formatter: function (value, { seriesIndex, dataPointIndex, w }) {
                            let fieldName = w.config.series[seriesIndex].name;
                            return percentageFields.includes(fieldName) ? `${value.toFixed(1)}%` : Math.round(value);
                        },
                        style: { fontSize: "12px" }
                    }
                };
                let chart = new ApexCharts(chartContainer[0], chartOptions);
                chart.render();
            }


        }
        else {
            $('.bot-message:last').remove();
            chatBox.append(mainContainer);
        }
        return this;
    };
}(jQuery));
