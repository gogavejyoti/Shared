<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Power BI Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Segoe+UI:wght@400;600&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />
    <style>
      body {
        background: linear-gradient(to bottom, #f3f2f1, #e9e7e5);
        font-family: "Segoe UI", sans-serif;
        padding: 20px;
        color: #333;
      }
      .container {
        max-width: 1200px;
      }
      .tile {
        background-color: #ffffff;
        border-radius: 8px;
        padding: 16px 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
        height: 110px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        position: relative;
        margin-bottom: 20px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #e0e0e0;
      }
      .tile:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
      }
      .tile-value {
        font-family: "Roboto Mono", monospace;
        font-size: 48px;
        font-weight: 600;
        color: #323130;
        line-height: 1;
      }
      .tile-title {
        font-size: 16px;
        color: #605e5c;
        font-family: "Segoe UI", sans-serif;
        margin-top: 6px;
      }
      .accent-bar {
        position: absolute;
        height: 6px;
        width: 100%;
        left: 0;
        bottom: 0;
        border-bottom-left-radius: 8px;
        border-bottom-right-radius: 8px;
      }
      .info .accent-bar {
        background-color: #0078d4;
      }
      .success .accent-bar {
        background-color: #107c10;
      }
      .warning .accent-bar {
        background-color: #ffb900;
      }
      .error .accent-bar {
        background-color: #d13438;
      }
      .pie-chart {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
        height: 240px;
        width: 100%;
        padding: 15px;
        border: 1px solid #e0e0e0;
      }
      .pie-chart-title {
        margin-bottom: 15px;
        text-align: center;
        font-weight: 600;
        font-size: 18px;
        color: #323130;
      }
      #chart {
        height: 180px !important;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .apexcharts-legend.apexcharts-align-bottom.apexcharts-horizontal {
        margin-top: 10px;
      }
      .bg-white {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
        padding: 15px;
        border: 1px solid #e0e0e0;
        height: 240px;
      }
      .bg-white .fw-semibold {
        font-size: 18px;
        color: #323130;
        margin-bottom: 10px;
      }
      #lineChart {
        height: 180px !important;
      }
      .program-table {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.08);
        padding: 16px;
        margin-top: 20px;
        border: 1px solid #e0e0e0;
      }
      .program-table table {
        width: 100%;
        font-size: 15px;
        color: #323130;
        border-collapse: collapse;
      }
      .program-table th {
        background-color: #f9f9f9;
        font-weight: 600;
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #e0e0e0;
      }
      .program-table td {
        padding: 10px;
        border-bottom: 1px solid #f0f0f0;
      }
      .program-table tr:last-child td {
        border-bottom: none;
      }
      .collapse-content {
        background-color: #f8f9fa;
        border-left: 6px solid #0078d4;
        padding: 12px 18px;
        margin: 10px 0;
        font-size: 15px;
        border-radius: 4px;
        background-color: #e9ecef; /* Changed background color */
      }
      .expand-btn {
        cursor: pointer;
        font-size: 20px;
        line-height: 1;
        user-select: none;
        color: #0078d4;
      }
      .expand-btn::before {
        content: "\f055";
        font-family: "Font Awesome 5 Free";
        font-weight: 900;
        margin-right: 10px;
      }
      .collapse.show .expand-btn::before {
        content: "\f056";
      }
      .status-dropdown {
        width: 100%;
        padding: 12px;
        margin-bottom: 18px;
        font-size: 16px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 16px 12px;
        padding-right: 2.5rem;
      }
      .status-dropdown:focus {
        outline: 0;
        box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25);
        border-color: #80bdff;
      }

      .agent-table th,
      .agent-table td {
        padding: 12px;
        text-align: center;
        border-bottom: 1px solid #e0e0e0;
      }
      .agent-table th {
        background-color: #f9f9f9;
        font-weight: 600;
      }
      .agent-table tr:last-child td {
        border-bottom: none;
      }
      .agent-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
        border-radius: 4px;
        overflow: hidden;
      }
      .agent-table tr:nth-child(even) {
        background-color: #f7f7f7;
      }
      .text-muted {
        font-size: 14px;
        color: #777;
      }
      .agent-table-container {
        max-height: 300px;
        overflow-y: auto;
      }
      @media (max-width: 992px) {
        .col-md-4,
        .col-md-5 {
          margin-top: 20px;
        }
      }
      @media (max-width: 768px) {
        .col-md-6 {
          margin-bottom: 20px;
        }
        .col-6 {
          margin-bottom: 16px;
        }
        .pie-chart {
          height: 280px;
        }
        #chart {
          height: 220px !important;
        }
        .bg-white {
          height: 280px;
        }
        #lineChart {
          height: 220px !important;
        }
      }
      @media (max-width: 576px) {
        .tile-value {
          font-size: 36px;
        }
        .tile-title {
          font-size: 14px;
        }
        .program-table th,
        .program-table td {
          padding: 8px;
        }
        .agent-table th,
        .agent-table td {
          padding: 8px;
        }
        .expand-btn {
          font-size: 18px;
        }
        .status-dropdown {
          font-size: 14px;
          padding: 10px;
        }
      }
    </style>
  </head>
  <body>
    <div class="container mt-4">
      <div class="row mb-4">
        <div class="col-md-3">
          <div class="row">
            <div class="col-6">
              <div class="tile info">
                <div class="tile-value">120</div>
                <div class="tile-title">Total Employees</div>
                <div class="accent-bar"></div>
              </div>
            </div>
            <div class="col-6">
              <div class="tile warning">
                <div class="tile-value">12</div>
                <div class="tile-title">Employees Absent</div>
                <div class="accent-bar"></div>
              </div>
            </div>
            <div class="col-6">
              <div class="tile success">
                <div class="tile-value">108</div>
                <div class="tile-title">Available</div>
                <div class="accent-bar"></div>
              </div>
            </div>
            <div class="col-6">
              <div class="tile error">
                <div class="tile-value">7</div>
                <div class="tile-title">Pending Tasks</div>
                <div class="accent-bar"></div>
              </div>
            </div>
          </div>
        </div>

        <div class="col-md-4">
          <div class="pie-chart">
            <div class="pie-chart-title">Employee Absence Status</div>
            <div id="chart"></div>
          </div>
        </div>

        <div class="col-md-5">
          <div class="bg-white p-3 rounded shadow-sm h-100 d-flex flex-column">
            <div class="mb-3 fw-semibold">Program Attendance</div>
            <div id="lineChart" class="flex-grow-1"></div>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="mb-3">
          <label for="viewModeSelect" class="form-label">View Mode:</label>
          <select
            id="viewModeSelect"
            class="form-select w-auto"
            onchange="renderMainTable()"
          >
            <option value="Program">Program-wise</option>
            <option value="Supervisor">Supervisor-wise</option>
            <option value="Geo">Geo-wise</option>
          </select>
        </div>
        <div class="col-12">
          <div class="program-table">
            <table class="table">
              <thead class="table-light">
                <tr>
                  <th></th>
                  <th>Group</th>
                  <th>Available</th>
                  <th>Present</th>
                  <th>Absent</th>
                  <th>Total</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      const pieChart = new ApexCharts(document.querySelector("#chart"), {
        chart: { type: "pie", height: 180 },
        series: [12, 108, 7, 120],
        labels: ["Absent", "Available", "Pending", "Total"],
        colors: ["#ffb900", "#107c10", "#d13438", "#0078d4"],
        legend: { show: true, position: "bottom" },
        responsive: [
          {
            breakpoint: 576,
            options: {
              chart: {
                height: 200,
              },
              legend: {
                position: "bottom",
              },
            },
          },
        ],
      });
      pieChart.render();

      const lineChart = new ApexCharts(document.querySelector("#lineChart"), {
        chart: { type: "line", height: 180 },
        series: [
          { name: "Available", data: [80, 95] },
          { name: "Present", data: [70, 85] },
          { name: "Absent", data: [10, 10] },
        ],
        xaxis: {
          categories: ["Program A", "Program B"],
          labels: { style: { fontFamily: "Segoe UI", fontSize: "12px" } },
        },
        colors: ["#107c10", "#0078d4", "#d13438"],
        stroke: { curve: "smooth", width: 2 },
        legend: { position: "top", horizontalAlign: "right" },
        responsive: [
          {
            breakpoint: 576,
            options: {
              chart: {
                height: 200,
              },
              legend: {
                position: "bottom",
                horizontalAlign: "center",
              },
            },
          },
        ],
      });
      lineChart.render();

      const agentData = {
        "Program A": {
          Available: [
            {
              name: "Alice",
              designation: "TL",
              geo: "Delhi",
              supervisor: "Ramesh",
              lastPresent: "2024-04-14",
            },
            {
              name: "Grace",
              designation: "Agent",
              geo: "Noida",
              supervisor: "Ramesh",
              lastPresent: "2024-04-16",
            },
          ],
          Present: [
            {
              name: "Bob",
              designation: "Agent",
              geo: "Delhi",
              supervisor: "Ramesh",
              lastPresent: "2024-04-16",
            },
            {
              name: "Henry",
              designation: "Agent",
              geo: "Gurgaon",
              supervisor: "Ramesh",
              lastPresent: "2024-04-15",
            },
            {
              name: "Ivy",
              designation: "Agent",
              geo: "Delhi",
              supervisor: "Ramesh",
              lastPresent: "2024-04-16",
            },
          ],
          Absent: [
            {
              name: "Charlie",
              designation: "Agent",
              geo: "Mumbai",
              supervisor: "Suresh",
              lastPresent: "2024-04-13",
            },
          ],
        },
        "Program B": {
          Available: [
            {
              name: "David",
              designation: "TL",
              geo: "Mumbai",
              supervisor: "Kiran",
              lastPresent: "2024-04-15",
            },
          ],
          Present: [
            {
              name: "Eve",
              designation: "Agent",
              geo: "Pune",
              supervisor: "Kiran",
              lastPresent: "2024-04-16",
            },
            {
              name: "Judy",
              designation: "Agent",
              geo: "Pune",
              supervisor: "Kiran",
              lastPresent: "2024-04-15",
            },
          ],
          Absent: [
            {
              name: "Frank",
              designation: "Agent",
              geo: "Delhi",
              supervisor: "Ramesh",
              lastPresent: "2024-04-13",
            },
            {
              name: "Kelly",
              designation: "Agent",
              geo: "Mumbai",
              supervisor: "Suresh",
              lastPresent: "2024-04-14",
            },
          ],
        },
        "Program C": {
          Available: [
            {
              name: "Leo",
              designation: "TL",
              geo: "Bangalore",
              supervisor: "Priya",
              lastPresent: "2024-04-17",
            },
          ],
          Present: [
            {
              name: "Mia",
              designation: "Agent",
              geo: "Bangalore",
              supervisor: "Priya",
              lastPresent: "2024-04-18",
            },
          ],
          Absent: [
            {
              name: "Noah",
              designation: "Agent",
              geo: "Chennai",
              supervisor: "Sundar",
              lastPresent: "2024-04-16",
            },
          ],
        },
      };

      function groupAgentsBy(key) {
        const result = {};
        for (const program in agentData) {
          for (const status in agentData[program]) {
            agentData[program][status].forEach((agent) => {
              const groupKey = agent[key];
              if (!result[groupKey]) {
                result[groupKey] = { Available: [], Present: [], Absent: [] };
              }
              result[groupKey][status].push(agent);
            });
          }
        }
        return result;
      }

      function renderMainTable() {
        const mode = document.getElementById("viewModeSelect").value;
        const tbody = document.querySelector(".program-table tbody");
        tbody.innerHTML = "";
        let rowId = 1;

        for (const group in mode === "Program"
          ? agentData
          : groupAgentsBy(mode.toLowerCase())) {
          const groupId = `row${rowId}`;
          const available =
            (mode === "Program"
              ? agentData[group]?.Available?.length
              : groupAgentsBy(mode.toLowerCase())[group]?.Available?.length) ||
            0;
          const present =
            (mode === "Program"
              ? agentData[group]?.Present?.length
              : groupAgentsBy(mode.toLowerCase())[group]?.Present?.length) || 0;
          const absent =
            (mode === "Program"
              ? agentData[group]?.Absent?.length
              : groupAgentsBy(mode.toLowerCase())[group]?.Absent?.length) || 0;
          const total = available + present + absent;

          tbody.innerHTML += `
            <tr>
              <td class="text-center">
                <span class="expand-btn" data-bs-toggle="collapse" data-bs-target="#${groupId}"></span>
              </td>
              <td>${group}</td>
              <td>${available}</td>
              <td>${present}</td>
              <td>${absent}</td>
              <td>${total}</td>
            </tr>
          `;

          tbody.innerHTML += `
            <tr class="collapse" id="${groupId}">
              <td colspan="6">
                <div class="collapse-content drilldown-content">
                  <div class="status-dropdown">
                    <select id="statusSelect${groupId}" class="form-select w-auto d-inline-block" onchange="updateDrilldownTable('${groupId}', '${group}')">
                      <option value="All">All</option>
                      <option value="Available">Available</option>
                      <option value="Present" selected>Present</option>
                      <option value="Absent">Absent</option>
                    </select>
                  </div>
                  <div id="agentTable${groupId}" class="agent-table-container"></div>
                </div>
              </td>
            </tr>
          `;

          setTimeout(() => {
            updateDrilldownTable(groupId, group);
            // set initial state of expand/collapse icon
            const expandBtn = document.querySelector(
              `[data-bs-target="#${groupId}"]`
            );
            if (expandBtn) {
              if (document.getElementById(groupId).classList.contains("show")) {
                expandBtn.classList.add("expanded");
              } else {
                expandBtn.classList.remove("expanded");
              }
            }
          }, 0);
          rowId++;
        }

        // Add event listener for expand/collapse functionality to update icon
        document.querySelectorAll(".expand-btn").forEach((btn) => {
          btn.addEventListener("click", (e) => {
            const clickedButton = e.target;
            if (clickedButton.classList.contains("collapsed")) {
              clickedButton.classList.remove("expanded");
            } else {
              clickedButton.classList.add("expanded");
            }
          });
        });
      }

      function updateDrilldownTable(groupId, groupName) {
        const mode = document.getElementById("viewModeSelect").value;
        const status = document.getElementById(`statusSelect${groupId}`).value;
        let agents = [];

        if (mode === "Program") {
          if (status === "All") {
            agents = [
              ...agentData[groupName].Available,
              ...agentData[groupName].Present,
              ...agentData[groupName].Absent,
            ];
          } else {
            agents = agentData[groupName][status] || [];
          }
        } else {
          const grouped = groupAgentsBy(mode.toLowerCase());
          if (status === "All") {
            agents = [
              ...grouped[groupName].Available,
              ...grouped[groupName].Present,
              ...grouped[groupName].Absent,
            ];
          } else {
            agents = grouped[groupName][status] || [];
          }
        }

        const container = document.getElementById(`agentTable${groupId}`);
        if (agents.length > 0) {
          container.innerHTML = `
            <table class="table agent-table table-sm table-bordered">
              <thead>
                <tr>
                  <th>Geo</th>
                  <th>Supervisor</th>
                  <th>Agent Name</th>
                  <th>Designation</th>
                  <th>Last Present</th>
                </tr>
              </thead>
              <tbody>
                ${agents
                  .map(
                    (a) => `
                  <tr>
                    <td>${a.geo}</td>
                    <td>${a.supervisor}</td>
                    <td>${a.name}</td>
                    <td>${a.designation}</td>
                    <td>${a.lastPresent}</td>
                  </tr>`
                  )
                  .join("")}
              </tbody>
            </table>
          `;
        } else {
          container.innerHTML = `<div class="text-muted">No agents found for this status.</div>`;
        }
      }

      renderMainTable();
    </script>
  </body>
</html>
